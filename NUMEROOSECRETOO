import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Random;

public class AmigoSecreto {
    private JFrame frame;
    private JTextField nomeInput;
    private DefaultListModel<String> listModel;
    private JList<String> listaNomes;
    private JLabel resultadoLabel;
    private ArrayList<String> amigos;

    public AmigoSecreto() {
        amigos = new ArrayList<>();
        frame = new JFrame("Sorteio Amigo Secreto");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(400, 400);
        frame.setLayout(new BorderLayout());

        // Painel superior com campo de entrada e botão "Adicionar"
        JPanel painelSuperior = new JPanel();
        nomeInput = new JTextField(20);
        JButton adicionarBtn = new JButton("Adicionar");

        painelSuperior.add(new JLabel("Nome:"));
        painelSuperior.add(nomeInput);
        painelSuperior.add(adicionarBtn);
        
        // Lista de nomes
        listModel = new DefaultListModel<>();
        listaNomes = new JList<>(listModel);
        JScrollPane listaScroll = new JScrollPane(listaNomes);

        // Botão de sorteio
        JButton sortearBtn = new JButton("Sortear Amigo");
        resultadoLabel = new JLabel("Resultado: ", SwingConstants.CENTER);

        // Evento do botão "Adicionar"
        adicionarBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                adicionarNome();
            }
        });

        // Evento do botão "Sortear Amigo"
        sortearBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                sortearAmigo();
            }
        });

        // Adicionando componentes ao frame
        frame.add(painelSuperior, BorderLayout.NORTH);
        frame.add(listaScroll, BorderLayout.CENTER);
        frame.add(sortearBtn, BorderLayout.SOUTH);
        frame.add(resultadoLabel, BorderLayout.PAGE_END);

        frame.setVisible(true);
    }

    private void adicionarNome() {
        String nome = nomeInput.getText().trim();

        // Validação: impedir entrada vazia
        if (nome.isEmpty()) {
            JOptionPane.showMessageDialog(frame, "Por favor, insira um nome.");
            return;
        }

        amigos.add(nome); // Adiciona ao ArrayList
        listModel.addElement(nome); // Atualiza a lista na tela
        nomeInput.setText(""); // Limpa o campo de entrada
    }

    private void sortearAmigo() {
        // Validação: impedir sorteio se a lista estiver vazia
        if (amigos.isEmpty()) {
            JOptionPane.showMessageDialog(frame, "A lista está vazia! Adicione nomes antes de sortear.");
            return;
        }

        // Sorteio aleatório
        Random random = new Random();
        String sorteado = amigos.get(random.nextInt(amigos.size()));
        resultadoLabel.setText("Amigo Secreto: " + sorteado);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(AmigoSecreto::new);
    }
}

